import React, { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import {
  Dialog,
  DialogTrigger,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
  DialogFooter,
} from '@/components/ui/dialog';

interface BlogPost {
  id: string;
  title: string;
  excerpt: string;
  content: string;
  author: string;
  date: string;
  category: string;
  tags: string[];
  readTime: number;
  image: string;
  imageWebp?: string;
  slug: string;
}

interface BlogProps {
  title?: string;
  posts?: BlogPost[];
}

const defaultPosts: BlogPost[] = [
  {
    id: '6',
    title: '–ö–∞–∫ –∑–∞–≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –±—ã—Å—Ç—Ä–æ: 30 –¥–Ω–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—è—é—Ç –≤—Å—ë',
    excerpt: '–ü–ª–∞–Ω –Ω–∞ –º–µ—Å—è—Ü, –∫–æ—Ç–æ—Ä—ã–π —Å–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–∞—Ö, —Å—Ç–∞–≤–∏—Ç —Ä–µ—á—å –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç –∏ –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã',
    content: '–ü–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –æ 30-–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ...',
    author: '–ú–∞—Ä–∞—Ç –§–∞—Å—Å–∞—Ö–æ–≤',
    date: '2025-02-10',
    category: '–ü—Ä–∞–∫—Ç–∏–∫–∞ —Ä–µ—á–∏',
    tags: ['—Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π', '–±–∞—Ä—å–µ—Ä', '–ø—Ä–∞–∫—Ç–∏–∫–∞', '–º–µ—Ç–æ–¥–∏–∫–∞'],
    readTime: 9,
    image: '/images/blog/IMG_4549.png',
    slug: 'speak-english-in-30-days'
  },
  {
    id: '5',
    title: '–ü–æ—á–µ–º—É —É —Ç–µ–±—è –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –≤—ã—É—á–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π?',
    excerpt: '–†–∞–∑–±–∏—Ä–∞–µ–º –≥–ª–∞–≤–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –Ω–µ—É–¥–∞—á –∏ –Ω–∞—Ö–æ–¥–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É',
    content: '–ü–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –æ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è—Ö –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ...',
    author: '–ú–∞—Ä–∞—Ç –§–∞—Å—Å–∞—Ö–æ–≤',
    date: '2025-01-15',
    category: '–ò–∑—É—á–µ–Ω–∏–µ —è–∑—ã–∫–∞',
    tags: ['–∞–Ω–≥–ª–∏–π—Å–∫–∏–π', '–º–æ—Ç–∏–≤–∞—Ü–∏—è', '–ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è', '–º–µ—Ç–æ–¥–∏–∫–∏'],
    readTime: 12,
    image: '/images/blog/IMG_4510.png',
    slug: 'why-english-fails'
  },
  {
    id: '1',
    title: '–ö–∞–∫ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –ï–ì–≠ –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É —è–∑—ã–∫—É',
    excerpt: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π —Å–¥–∞—á–∏ —ç–∫–∑–∞–º–µ–Ω–∞',
    content: '–ü–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –ï–ì–≠...',
    author: '–ú–∞—Ä–∞—Ç –§–∞—Å—Å–∞—Ö–æ–≤',
    date: '2024-12-08',
    category: '–ï–ì–≠/–û–ì–≠',
    tags: ['–ï–ì–≠', '–∞–Ω–≥–ª–∏–π—Å–∫–∏–π', '–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞', '—ç–∫–∑–∞–º–µ–Ω'],
    readTime: 8,
    image: '/images/blog/blog_language.png',
    imageWebp: '/images/blog/blog_language.webp',
    slug: 'ege-preparation'
  },
  {
    id: '2',
    title: '–¢–æ–ø-10 –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∏–∑—É—á–µ–Ω–∏–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞',
    excerpt: '–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –∏ —Å–ø–æ—Å–æ–±—ã –∏—Ö –∏–∑–±–µ–∂–∞—Ç—å',
    content: '–ü–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –æ–± –æ—à–∏–±–∫–∞—Ö...',
    author: '–ú–∞—Ä–∞—Ç –§–∞—Å—Å–∞—Ö–æ–≤',
    date: '2024-10-22',
    category: '–ò–∑—É—á–µ–Ω–∏–µ —è–∑—ã–∫–∞',
    tags: ['–∞–Ω–≥–ª–∏–π—Å–∫–∏–π', '–æ—à–∏–±–∫–∏', '–∏–∑—É—á–µ–Ω–∏–µ', '—Å–æ–≤–µ—Ç—ã'],
    readTime: 6,
    image: '/images/blog/blog_mistakes.png',
    imageWebp: '/images/blog/blog_mistakes.webp',
    slug: 'common-mistakes'
  },
  {
    id: '3',
    title: '–û–ª–∏–º–ø–∏–∞–¥–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞: –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É',
    excerpt: '–ö–∞–∫ —Å—Ç–∞—Ç—å –ø—Ä–∏–∑–µ—Ä–æ–º –æ–ª–∏–º–ø–∏–∞–¥—ã –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É —è–∑—ã–∫—É',
    content: '–ü–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –æ–± –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö...',
    author: '–ú–∞—Ä–∞—Ç –§–∞—Å—Å–∞—Ö–æ–≤',
    date: '2024-08-14',
    category: '–û–ª–∏–º–ø–∏–∞–¥—ã',
    tags: ['–æ–ª–∏–º–ø–∏–∞–¥–∞', '–∞–Ω–≥–ª–∏–π—Å–∫–∏–π', '–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞', '—É—Å–ø–µ—Ö'],
    readTime: 10,
    image: '/images/blog/blog_olymp.png',
    imageWebp: '/images/blog/blog_olymp.webp',
    slug: 'olympiad-success'
  },
  {
    id: '4',
    title: '–û–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏–µ: –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏',
    excerpt: '–ü–æ—á–µ–º—É –æ–Ω–ª–∞–π–Ω-—É—Ä–æ–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã—Ö',
    content: '–ü–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –æ–± –æ–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏–∏...',
    author: '–ú–∞—Ä–∞—Ç –§–∞—Å—Å–∞—Ö–æ–≤',
    date: '2024-06-03',
    category: '–û–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏–µ',
    tags: ['–æ–Ω–ª–∞–π–Ω', '–æ–±—É—á–µ–Ω–∏–µ', '–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'],
    readTime: 7,
    image: '/images/blog/blog_online.png',
    imageWebp: '/images/blog/blog_online.webp',
    slug: 'online-learning'
  }
];

export const Blog: React.FC<BlogProps> = ({ 
  title = "–ë–õ–û–ì –ò –°–û–í–ï–¢–´",
  posts = defaultPosts 
}) => {
  const [selectedCategory, setSelectedCategory] = useState<string>('all');
  const [searchQuery, setSearchQuery] = useState<string>('');
  const [imageStates, setImageStates] = useState<{ [key: string]: 'loading' | 'loaded' | 'error' }>({});
  const [isSubscribeOpen, setIsSubscribeOpen] = useState(false);
  const [isSuccessOpen, setIsSuccessOpen] = useState(false);
  const [isSubmitting, setIsSubmitting] = useState(false);

  const categories = ['all', ...Array.from(new Set(posts.map(post => post.category)))];
  
  const filteredPosts = posts.filter(post => {
    const matchesCategory = selectedCategory === 'all' || post.category === selectedCategory;
    const matchesSearch = post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         post.excerpt.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         post.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()));
    
    return matchesCategory && matchesSearch;
  });

  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  };

  const handleImageLoad = (postId: string) => {
    setImageStates(prev => ({ ...prev, [postId]: 'loaded' }));
  };

  const handleImageError = (postId: string) => {
    setImageStates(prev => ({ ...prev, [postId]: 'error' }));
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º fallback –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const imgElement = document.querySelector(`[data-post-id="${postId}"]`) as HTMLImageElement;
    if (imgElement) {
      imgElement.src = '/placeholder.svg';
    }
  };

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  useEffect(() => {
    const initialStates: { [key: string]: 'loading' | 'loaded' | 'error' } = {};
    posts.forEach(post => {
      initialStates[post.id] = 'loading';
    });
    setImageStates(initialStates);
  }, [posts]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const renderOptimizedImage = (post: BlogPost) => (
    <div className="aspect-video rounded-lg mb-4 overflow-hidden relative blog-card-image-container">
      {imageStates[post.id] === 'loading' && (
        <div className="absolute inset-0 flex items-center justify-center bg-gray-200">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-brand-secondary"></div>
        </div>
      )}
      
      <picture>
        {/* WebP –≤–µ—Ä—Å–∏—è –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤ (–Ω–∞ –≤—Å–µ—Ö —à–∏—Ä–∏–Ω–∞—Ö) */}
        {post.imageWebp && (
          <source
            srcSet={post.imageWebp}
            type="image/webp"
          />
        )}
        
        {/* PNG –≤–µ—Ä—Å–∏—è –∫–∞–∫ fallback */}
        <img
          src={post.image}
          alt={post.title}
          data-post-id={post.id}
          className={`w-full h-full object-cover object-center blog-card-image ${
            imageStates[post.id] === 'loading' ? 'loading' : 
            imageStates[post.id] === 'error' ? 'error' : 
            imageStates[post.id] === 'loaded' ? 'fade-in' : ''
          }`}
          loading="lazy"
          decoding="async"
          onLoad={() => handleImageLoad(post.id)}
          onError={() => handleImageError(post.id)}
        />
      </picture>
      
      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
      {imageStates[post.id] === 'loading' && (
        <div className="absolute inset-0 bg-gradient-to-br from-gray-100 to-gray-200 animate-pulse" />
      )}
      
      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—à–∏–±–∫–∏ */}
      {imageStates[post.id] === 'error' && (
        <div className="absolute inset-0 flex items-center justify-center bg-gray-100">
          <div className="text-center text-gray-500">
            <div className="text-2xl mb-2">üì∑</div>
            <div className="text-sm">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ</div>
          </div>
        </div>
      )}
    </div>
  );

  const handleSubscribeSubmit: React.FormEventHandler<HTMLFormElement> = async (e) => {
    e.preventDefault();
    if (isSubmitting) return;
    setIsSubmitting(true);
    const form = e.currentTarget;
    const formData = new FormData(form);

    const firstName = (formData.get('firstName') as string || '').trim();
    const lastName = (formData.get('lastName') as string || '').trim();
    const email = (formData.get('email') as string || '').trim();
    const telegram = (formData.get('telegram') as string || '').trim();
    const phone = (formData.get('phone') as string || '').trim();

    try {
      const botToken = '8059904436:AAF8kJbXOKbMgv6tvq5hMCEmvorfHt608ow';
      const chatId = '-1002835359630';
      const message = `\nüÜï –ù–û–í–ê–Ø –ü–û–î–ü–ò–°–ö–ê –ù–ê –ë–õ–û–ì!\n\nüë§ –ò–º—è: ${firstName || '‚Äî'}\nüë§ –§–∞–º–∏–ª–∏—è: ${lastName || '‚Äî'}\nüìß Email: ${email || '‚Äî'}\nüì± Telegram: ${telegram || '–ù–µ —É–∫–∞–∑–∞–Ω'}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone || '‚Äî'}\n\n‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}\nüåê –ò—Å—Ç–æ—á–Ω–∏–∫: –ë–ª–æ–≥`; 

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram (–±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è –±–ª–æ–∫–∞ UI)
      try {
        fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ chat_id: chatId, text: message }),
        }).catch(() => {});
      } catch {}

      form.reset();
      setIsSubscribeOpen(false);
      setIsSuccessOpen(true);
    } catch {
      // –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–¥–±–µ–∫, —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å –ª–∏–¥
      setIsSubscribeOpen(false);
      setIsSuccessOpen(true);
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <section className="px-4 py-16 max-w-6xl mx-auto">
      <div className="text-center mb-12">
        <h2 className="font-arsenal text-4xl font-bold text-black mb-4">{title}</h2>
        <div className="w-32 h-1 bg-brand-secondary mx-auto mb-6"></div>
        <p className="font-arsenal text-xl text-brand-secondary font-bold">
          –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
        </p>
        <div className="mt-6">
          <Dialog open={isSubscribeOpen} onOpenChange={setIsSubscribeOpen}>
            <DialogTrigger asChild>
              <Button className="bg-brand-secondary text-black font-arsenal font-bold px-6 py-3 rounded-2xl hover:bg-brand-secondary/90">
                –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–ª–æ–≥
              </Button>
            </DialogTrigger>
            <DialogContent className="course-modal bg-white/95 backdrop-blur-md border border-white/40 shadow-2xl sm:max-w-xl">
              <DialogHeader>
                <DialogTitle className="font-arsenal text-2xl text-black">–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–ª–æ–≥</DialogTitle>
                <DialogDescription className="font-anonymous text-black/70">
                  –ü–æ–ª—É—á–∞–π –Ω–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ –∏–Ω—Å–∞–π—Ç—ã –ø–µ—Ä–≤—ã–º. –ó–∞–ø–æ–ª–Ω–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ–æ—Ä–º—É –Ω–∏–∂–µ.
                </DialogDescription>
              </DialogHeader>
              <form onSubmit={handleSubscribeSubmit} className="space-y-4">
                <div className="grid sm:grid-cols-2 gap-3">
                  <input name="firstName" placeholder="–ò–º—è" className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} />
                  <input name="lastName" placeholder="–§–∞–º–∏–ª–∏—è" className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} />
                </div>
                <input name="email" type="email" required placeholder="Email" className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} />
                <input name="telegram" placeholder="Telegram-–Ω–∏–∫ (—á–µ—Ä–µ–∑ @) ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ" className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} />
                <input name="phone" placeholder="–¢–µ–ª–µ—Ñ–æ–Ω ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ" className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} />
                
                <DialogFooter>
                  <Button type="submit" disabled={isSubmitting} className="w-full bg-brand-secondary text-black font-arsenal font-bold hover:bg-brand-secondary/90">
                    {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º‚Ä¶' : '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è'}
                  </Button>
                </DialogFooter>
              </form>
            </DialogContent>
          </Dialog>

          {/* Success Popup */}
          <Dialog open={isSuccessOpen} onOpenChange={setIsSuccessOpen}>
            <DialogContent className="bg-white/95 backdrop-blur-md border border-white/40 shadow-2xl sm:max-w-md text-center">
              <div className="mx-auto mb-2 w-14 h-14 rounded-full flex items-center justify-center" style={{ background: 'linear-gradient(135deg, #A99F9B, #C4A698)' }}>
                <span className="text-white text-2xl">‚úì</span>
              </div>
              <DialogTitle className="font-arsenal text-2xl text-black">–ì–æ—Ç–æ–≤–æ!</DialogTitle>
              <DialogDescription className="font-anonymous text-black/70">
                –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –±–ª–æ–≥. –ù–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤–∞–º –ø–µ—Ä–≤—ã–º–∏.
              </DialogDescription>
              <div className="mt-4">
                <Button onClick={() => setIsSuccessOpen(false)} className="bg-brand-secondary text-black font-arsenal font-bold hover:bg-brand-secondary/90 w-full">
                  –ó–∞–∫—Ä—ã—Ç—å
                </Button>
              </div>
            </DialogContent>
          </Dialog>
        </div>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
      <div className="mb-8 space-y-4">
        {/* –ü–æ–∏—Å–∫ */}
        <div className="max-w-md mx-auto">
          <input
            type="text"
            placeholder="–ü–æ–∏—Å–∫ –ø–æ —Å—Ç–∞—Ç—å—è–º..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="w-full px-4 py-3 rounded-lg bg-white/40 backdrop-blur-sm text-black placeholder-black/50 font-arsenal text-sm border border-white/20 shadow-lg"
          />
        </div>

        {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
        <div className="flex flex-wrap justify-center gap-2">
          {categories.map((category) => (
            <Button
              key={category}
              variant={selectedCategory === category ? "default" : "outline"}
              onClick={() => setSelectedCategory(category)}
              className={`font-arsenal text-sm ${
                selectedCategory === category 
                  ? 'bg-brand-secondary text-black' 
                  : 'bg-white/40 text-black border-brand-secondary/30 hover:bg-white/60'
              }`}
            >
              {category === 'all' ? '–í—Å–µ' : category}
            </Button>
          ))}
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π */}
      <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {filteredPosts.map((post) => (
          <Card key={post.id} className="bg-white/40 backdrop-blur-sm border-white/20 shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105">
            <CardHeader className="pb-4">
              {renderOptimizedImage(post)}
              <div className="flex items-center gap-2 mb-2">
                <Badge variant="secondary" className="bg-brand-secondary/20 text-brand-secondary border-brand-secondary/30">
                  {post.category}
                </Badge>
                <span className="text-xs text-black/60 font-anonymous">
                  {post.readTime} –º–∏–Ω
                </span>
              </div>
              <CardTitle className="font-arsenal text-lg font-bold text-black line-clamp-2">
                {post.title}
              </CardTitle>
            </CardHeader>
            
            <CardContent>
              <CardDescription className="font-anonymous text-sm text-black/70 mb-4 line-clamp-3">
                {post.excerpt}
              </CardDescription>
              
              <div className="space-y-3">
                {/* –¢–µ–≥–∏ */}
                <div className="flex flex-wrap gap-1">
                  {post.tags.slice(0, 3).map((tag) => (
                    <Badge key={tag} variant="outline" className="text-xs bg-white/20 border-white/30 text-black/60">
                      #{tag}
                    </Badge>
                  ))}
                </div>
                
                {/* –ú–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div className="flex items-center justify-between text-xs text-black/50 font-anonymous">
                  <span>{post.author}</span>
                  <span>{formatDate(post.date)}</span>
                </div>
                
                {/* –ö–Ω–æ–ø–∫–∞ —á–∏—Ç–∞—Ç—å */}
                <Button 
                  className="w-full bg-brand-secondary text-black font-arsenal font-bold hover:bg-brand-secondary/90"
                  onClick={() => {
                    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –ø–æ–ª–Ω–æ–π —Å—Ç–∞—Ç—å–µ
                    const routes: { [key: string]: string } = {
                      'speak-english-in-30-days': '/blog/speak-english-in-30-days.html',
                      'why-english-fails': '/blog/why-english-fails.html',
                      'ege-preparation': '/blog/ege-preparation.html',
                      'olympiad-success': '/blog/olympiad-success.html', 
                      'common-mistakes': '/blog/common-mistakes.html',
                      'online-learning': '/blog/online-learning.html'
                    };
                    
                    const route = routes[post.slug];
                    if (route) {
                      window.open(route, '_blank');
                    }
                  }}
                >
                  –ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é
                </Button>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* CTA: –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–ª–æ–≥ */}
      <div className="mt-16">
        <div className="rounded-3xl p-8 md:p-10 text-center shadow-2xl bg-gradient-to-r from-brand-secondary to-[#C4A698]">
          <h3 className="font-arsenal text-3xl font-bold text-black mb-3">–ü–æ–Ω—Ä–∞–≤–∏–ª—Å—è –±–ª–æ–≥?</h3>
          <p className="font-anonymous text-black/80 text-lg md:text-xl mb-6">–ü–æ–¥–ø–∏—à–∏—Å—å –∏ –ø–æ–ª—É—á–∞–π –Ω–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –∏ —Ä–∞–∑–±–æ—Ä—ã –æ—à–∏–±–æ–∫ –ø–µ—Ä–≤—ã–º.</p>
          <div className="flex flex-wrap items-center justify-center gap-2 mb-6">
            <span className="px-3 py-1 rounded-full bg-white/70 text-black text-sm font-arsenal">–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã</span>
            <span className="px-3 py-1 rounded-full bg-white/70 text-black text-sm font-arsenal">–†–∞–∑–±–æ—Ä—ã —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤</span>
            <span className="px-3 py-1 rounded-full bg-white/70 text-black text-sm font-arsenal">–ú–µ—Ç–æ–¥–∏–∫–∏ –±–µ–∑ –∑—É–±—Ä—ë–∂–∫–∏</span>
          </div>
          <Dialog open={isSubscribeOpen} onOpenChange={setIsSubscribeOpen}>
            <DialogTrigger asChild>
              <Button className="bg-white text-black font-arsenal font-bold px-8 py-4 rounded-2xl shadow-lg hover:bg-white/90 transition-all">
                –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–ª–æ–≥
              </Button>
            </DialogTrigger>
            <DialogContent className="course-modal bg-white/95 backdrop-blur-md border border-white/40 shadow-2xl sm:max-w-xl">
              <DialogHeader>
                <DialogTitle className="font-arsenal text-2xl text-black">–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–ª–æ–≥</DialogTitle>
                <DialogDescription className="font-anonymous text-black/70">
                  –ü–æ–ª—É—á–∞–π –Ω–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ –∏–Ω—Å–∞–π—Ç—ã –ø–µ—Ä–≤—ã–º. –ó–∞–ø–æ–ª–Ω–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ–æ—Ä–º—É –Ω–∏–∂–µ.
                </DialogDescription>
              </DialogHeader>
              <form onSubmit={handleSubscribeSubmit} className="space-y-4">
                <div className="grid sm:grid-cols-2 gap-3">
                  <input name="firstName" placeholder="–ò–º—è" className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} />
                  <input name="lastName" placeholder="–§–∞–º–∏–ª–∏—è" className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} />
                </div>
                <input name="email" type="email" required placeholder="Email" className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} />
                <input name="telegram" placeholder="Telegram-–Ω–∏–∫ (—á–µ—Ä–µ–∑ @) ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ" className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} />
                <input name="phone" placeholder="–¢–µ–ª–µ—Ñ–æ–Ω ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ" className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} />
                
                <DialogFooter>
                  <Button type="submit" disabled={isSubmitting} className="w-full bg-brand-secondary text-black font-arsenal font-bold hover:bg-brand-secondary/90">
                    {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º‚Ä¶' : '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è'}
                  </Button>
                </DialogFooter>
              </form>
            </DialogContent>
          </Dialog>
        </div>
      </div>

      {/* Success Popup (–æ–±—â–∏–π) */}
      <Dialog open={isSuccessOpen} onOpenChange={setIsSuccessOpen}>
        <DialogContent className="bg-white/95 backdrop-blur-md border border-white/40 shadow-2xl sm:max-w-md text-center">
          <div className="mx-auto mb-2 w-14 h-14 rounded-full flex items-center justify-center" style={{ background: 'linear-gradient(135deg, #A99F9B, #C4A698)' }}>
            <span className="text-white text-2xl">‚úì</span>
          </div>
          <DialogTitle className="font-arsenal text-2xl text-black">–ì–æ—Ç–æ–≤–æ!</DialogTitle>
          <DialogDescription className="font-anonymous text-black/70">
            –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –±–ª–æ–≥. –ù–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤–∞–º –ø–µ—Ä–≤—ã–º–∏.
          </DialogDescription>
          <div className="mt-4">
            <Button onClick={() => setIsSuccessOpen(false)} className="bg-brand-secondary text-black font-arsenal font-bold hover:bg-brand-secondary/90 w-full">
              –ó–∞–∫—Ä—ã—Ç—å
            </Button>
          </div>
        </DialogContent>
      </Dialog>
    </section>
  );
}; 