import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import {
  Dialog,
  DialogTrigger,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
  DialogFooter,
} from '@/components/ui/dialog';

interface InArticleLeadFormProps {
  title?: string;
  description?: string;
  buttonText?: string;
  leadMagnet?: 'checklist' | 'consultation' | 'lesson';
}

export const InArticleLeadForm: React.FC<InArticleLeadFormProps> = ({
  title = "–ü–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é",
  description = "–û–ø—Ä–µ–¥–µ–ª–∏–º —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∏ —Å–æ—Å—Ç–∞–≤–∏–º –ø–ª–∞–Ω –∑–∞–Ω—è—Ç–∏–π –ø–æ–¥ —Ç–≤–æ—é —Ü–µ–ª—å",
  buttonText = "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
  leadMagnet = 'consultation'
}) => {
  const [isOpen, setIsOpen] = useState(false);
  const [isSuccessOpen, setIsSuccessOpen] = useState(false);
  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleSubmit: React.FormEventHandler<HTMLFormElement> = async (e) => {
    e.preventDefault();
    if (isSubmitting) return;
    setIsSubmitting(true);
    const form = e.currentTarget;
    const formData = new FormData(form);

    const name = (formData.get('name') as string || '').trim();
    const email = (formData.get('email') as string || '').trim();
    const telegram = (formData.get('telegram') as string || '').trim();
    const phone = (formData.get('phone') as string || '').trim();
    const goal = (formData.get('goal') as string || '').trim();

    try {
      const botToken = '8059904436:AAF8kJbXOKbMgv6tvq5hMCEmvorfHt608ow';
      const chatId = '-1002835359630';
      
      let messageType = '';
      switch(leadMagnet) {
        case 'checklist':
          messageType = '–ó–ê–ü–†–û–° –ß–ï–ö-–õ–ò–°–¢–ê "10 –û–®–ò–ë–û–ö –ï–ì–≠"';
          break;
        case 'consultation':
          messageType = '–ó–ê–ü–†–û–° –ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–ò –ò–ó –°–¢–ê–¢–¨–ò';
          break;
        case 'lesson':
          messageType = '–ó–ê–ü–ò–°–¨ –ù–ê –ü–†–û–ë–ù–´–ô –£–†–û–ö –ò–ó –°–¢–ê–¢–¨–ò';
          break;
      }
      
      const message = `\nüÜï ${messageType}!\n\nüë§ –ò–º—è: ${name || '‚Äî'}\nüìß Email: ${email || '‚Äî'}\nüì± Telegram: ${telegram || '–ù–µ —É–∫–∞–∑–∞–Ω'}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone || '‚Äî'}\nüéØ –¶–µ–ª—å: ${goal || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n\n‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}\nüåê –ò—Å—Ç–æ—á–Ω–∏–∫: In-Article Form`;

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram (–≤ —Ñ–æ–Ω–µ)
      try {
        fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ chat_id: chatId, text: message }),
        }).catch(() => {});
      } catch {}

      form.reset();
      setIsOpen(false);
      setIsSuccessOpen(true);
    } catch {
      setIsOpen(false);
      setIsSuccessOpen(true);
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <>
      <div className="my-8 p-6 bg-gradient-to-r from-brand-secondary/20 to-[#C4A698]/20 rounded-2xl border border-brand-secondary/30">
        <div className="text-center">
          <h3 className="font-arsenal text-xl font-bold text-black mb-2">{title}</h3>
          <p className="font-anonymous text-black/70 mb-4">{description}</p>
          <Dialog open={isOpen} onOpenChange={setIsOpen}>
            <DialogTrigger asChild>
              <Button className="bg-brand-secondary text-black font-arsenal font-bold px-6 py-3 rounded-2xl hover:bg-brand-secondary/90">
                {buttonText}
              </Button>
            </DialogTrigger>
            <DialogContent className="course-modal bg-white/95 backdrop-blur-md border border-white/40 shadow-2xl sm:max-w-xl">
              <DialogHeader>
                <DialogTitle className="font-arsenal text-2xl text-black">{title}</DialogTitle>
                <DialogDescription className="font-anonymous text-black/70">
                  –ó–∞–ø–æ–ª–Ω–∏ —Ñ–æ—Ä–º—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞
                </DialogDescription>
              </DialogHeader>
              <form onSubmit={handleSubmit} className="space-y-4">
                <input 
                  name="name" 
                  placeholder="–¢–≤–æ—ë –∏–º—è" 
                  required
                  className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" 
                  style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} 
                />
                <input 
                  name="email" 
                  type="email" 
                  placeholder="Email" 
                  className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" 
                  style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} 
                />
                <input 
                  name="telegram" 
                  placeholder="Telegram (—á–µ—Ä–µ–∑ @) ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ" 
                  className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" 
                  style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} 
                />
                <input 
                  name="phone" 
                  placeholder="–¢–µ–ª–µ—Ñ–æ–Ω ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ" 
                  className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black placeholder-black/40 font-arsenal text-sm font-bold border-0 shadow-inner" 
                  style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }} 
                />
                <select 
                  name="goal" 
                  className="w-full px-4 py-3 rounded-lg bg-[#E8DED6] text-black font-arsenal text-sm font-bold border-0 shadow-inner" 
                  style={{ boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.25) inset' }}
                >
                  <option value="">–í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ü–µ–ª—å</option>
                  <option value="–ï–ì–≠/–û–ì–≠">–ï–ì–≠/–û–ì–≠ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞</option>
                  <option value="–û–ª–∏–º–ø–∏–∞–¥–∞">–û–ª–∏–º–ø–∏–∞–¥–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞</option>
                  <option value="–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π">–°–≤–æ–±–æ–¥–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ</option>
                  <option value="IELTS">IELTS –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞</option>
                  <option value="–î—Ä—É–≥–æ–µ">–î—Ä—É–≥–æ–µ</option>
                </select>
                
                <DialogFooter>
                  <Button type="submit" disabled={isSubmitting} className="w-full bg-brand-secondary text-black font-arsenal font-bold hover:bg-brand-secondary/90">
                    {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º‚Ä¶' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'}
                  </Button>
                </DialogFooter>
              </form>
            </DialogContent>
          </Dialog>
        </div>
      </div>

      {/* Success Popup */}
      <Dialog open={isSuccessOpen} onOpenChange={setIsSuccessOpen}>
        <DialogContent className="bg-white/95 backdrop-blur-md border border-white/40 shadow-2xl sm:max-w-md text-center">
          <div className="mx-auto mb-2 w-14 h-14 rounded-full flex items-center justify-center" style={{ background: 'linear-gradient(135deg, #A99F9B, #C4A698)' }}>
            <span className="text-white text-2xl">‚úì</span>
          </div>
          <DialogTitle className="font-arsenal text-2xl text-black">–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</DialogTitle>
          <DialogDescription className="font-anonymous text-black/70">
            –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞. –ü—Ä–æ–≤–µ—Ä—å Telegram –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω.
          </DialogDescription>
          <div className="mt-4">
            <Button onClick={() => setIsSuccessOpen(false)} className="bg-brand-secondary text-black font-arsenal font-bold hover:bg-brand-secondary/90 w-full">
              –ó–∞–∫—Ä—ã—Ç—å
            </Button>
          </div>
        </DialogContent>
      </Dialog>
    </>
  );
};